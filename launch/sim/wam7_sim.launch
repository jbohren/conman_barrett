<launch>
<!--
   - This launchfile brings up a single 7-DOF WAM robot in the gazebo simulator.
   -
   - run with rviz like this for planning demo:
   - rosrun rviz rviz __ns:=/gazebo /planning_scene:=/gazebo/planning_scene /get_planning_scene:=/gazebo/get_planning_scene
   -
   - rostopic pub /gazebo/barrett_manager/hand/cmd oro_barrett_msgs/BHandCmd "{ mode: [3,3,3,3], cmd: [2.5,2.5,2.5,0.0] }"
   - rostopic pub -r 1 /gazebo/traj_rml/joint_traj_point_cmd trajectory_msgs/JointTrajectoryPoint "{ positions: [0.0,0,0,0.0,0,0,0.0] }"
   -->

  <arg name="log_level" default="5" doc="(int) Set the Orocos log level (0:none) (4:warn) (5:info) (6:debug)"/>
  <arg name="debug" default="false" doc="(bool) Launch in debug mode"/>
  <arg name="gui" default="true" doc="(bool) Launch the gazebo GUI"/>
  <arg name="planning" default="false" doc="(bool) Launch the motion planing pipeline"/>
  <arg name="empty" default="false" doc="(bool) Launch the robot with an open palm"/>
  <arg name="hand" default="false" doc="(bool) Launch the robot with a hand"/>
  <arg name="ball" default="false" doc="(bool) Launch the robot with a ball"/>
  <arg name="bumblebee" default="false" doc="(bool) Launch the robot with a bumblebee"/>
  <arg name="initial_group" default="joint_control" doc="(string) Initial active controller group"/>
  <arg name="dash" default="true" doc="(bool) If true, display the barrett dashboard."/>
  <arg name="rescuer" default="false" doc="(bool) If true, use the singularity rescuer."/>

  <arg name="j0" default="0.0" doc="(float) Joint 0 initial position"/>
  <arg name="j1" default="0.0" doc="(float) Joint 1 initial position"/>
  <arg name="j2" default="0.0" doc="(float) Joint 2 initial position"/>
  <arg name="j3" default="0.0" doc="(float) Joint 3 initial position"/>
  <arg name="j4" default="0.0" doc="(float) Joint 4 initial position"/>
  <arg name="j5" default="0.0" doc="(float) Joint 5 initial position"/>
  <arg name="j6" default="0.0" doc="(float) Joint 6 initial position"/>
  <arg name="initial_joint_positions" default="$(arg j0), $(arg j1), $(arg j2), $(arg j3), $(arg j4), $(arg j5), $(arg j6)" doc="(comma-separated floats) Initial joint positions"/>

  <param name="use_sim_time" value="true"/>

  <!-- Gazebo -->
  <include file="$(find rtt_gazebo_examples)/test/empty_world.launch">
    <env name="ORO_LOGLEVEL" value="$(arg log_level)"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="verbose" value="true"/>
    <arg name="world_name" value="$(find lcsr_barrett)/launch/sim/wam.world"/>
  </include>

  <!-- Load WAM URDF -->
  <param name="robot_description"
    command="$(find xacro)/xacro.py '$(find lcsr_barrett)/launch/sim/wam7_sim.urdf.xacro'
    prefix:=wam
    lua_script:='$(find lcsr_barrett)/lua/wam_sim.lua'
    hand:=$(arg hand) ball:=$(arg ball)
    initial_group:=$(arg initial_group)" />

  <node name="shadow_generator"
    pkg="rviz_virtual_shadow"
    type="make_virtual_shadow.py">
    <param name="model_param" value="robot_description"/>
  </node>

  <!-- Spawn the robot in Gazebo -->
  <node name="aa_$(anon urdf_spawner)"
    pkg="gazebo_ros"
    type="spawn_model"
    respawn="false"
    output="screen"
    args="-urdf -model wam -param robot_description">
    <rosparam subst_value="true">
      initial_joint_names:
        - "wam/base_yaw_joint"
        - "wam/shoulder_pitch_joint"
        - "wam/shoulder_yaw_joint"
        - "wam/elbow_pitch_joint"
        - "wam/wrist_yaw_joint"
        - "wam/wrist_pitch_joint"
        - "wam/palm_yaw_joint"
      initial_joint_positions: [$(arg initial_joint_positions)]
    </rosparam>
  </node>

  <!-- Spawn the lcsr stage in Gazebo -->
  <param name="stage_model"
    command="$(find xacro)/xacro.py '$(find lcsr_barrett)/models/stage.urdf.xacro'" />
  <node if="false" name="$(anon urdf_spawner)" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model stage -param stage_model"/>
  <node name="stage_pose_broadcaster" pkg="tf" type="static_transform_publisher"
    args="0 0 0 0 0 0 /world /stage_link 50"/>

  <!-- Create nodes in gazebo namespace -->
  <group ns="gazebo">

    <group ns="barrett_manager">

      <node if="$(arg dash)" pkg="rqt_barrett" type="rqt_barrett" name="rqt_barrett">
        <remap from="robot_description" to="/robot_description"/>
        <remap from="joint_states" to="wam/joint_states"/>
      </node>
      <node pkg="joint_state_publisher" type="joint_state_publisher" name="$(anon joint_state_publisher)">
        <rosparam param="source_list" subst_value="true">
          ["wam/joint_states", "hand/joint_states"]
        </rosparam>
        <param name="rate" value="50"/>
        <remap from="robot_description" to="/robot_description"/>
      </node>
      <node pkg="robot_state_publisher" type="robot_state_publisher" name="$(anon robot_state_publisher)">
        <param name="publish_frequency" value="50"/>
      </node>

      <rosparam subst_value="true">
        # Auto-configuration
        auto_configure_wam: true
        auto_configure_hand: $(arg hand)
        wam_dof: 7
        wam_urdf_prefix: wam

        # WAM Parameters
        wam:
          velocity_cutoff_frequency: 300

        # Hand Parameters
        hand:
          trap_vel: 2.0
          trap_accel: 10.0
          p_gain: 10.0
          i_gain: 0.0
          i_clamp: 0.0
          d_gain: 0.02
          max_torque: 3.0
          stop_torque: 3.0
          spread_p_gain: 5.0
          spread_d_gain: 0.0
          finger_acceleration: 1.0
          inner_breakaway_gain: 0.001
          inner_breakaway_torque: 0.5
          outer_recouple_velocity: 1.0
          outer_coupling_p_gain: 1.0
          outer_coupling_d_gain: 0.001
      </rosparam>

      <!-- If using the BHand -->
      <group if="$(arg hand)">
        <param name="hand_urdf_prefix" value="wam/hand"/>

        <!-- Mid-Level hand interface -->
        <node name="bhand_action_server"
          pkg="oro_barrett_interface"
          type="bhand_action_server.py"
          output="screen"/>
      </group>

    </group>

    <!-- Barrett Hardwre Config and Orocos Components -->
    <include file="$(find lcsr_barrett)/launch/sim/orocos_component_params.launch">
      <arg name="ee_empty" value="$(arg empty)"/>
      <arg name="ee_ball" value="$(arg ball)"/>
      <arg name="ee_bumblebee" value="$(arg bumblebee)"/>
      <arg name="ee_hand" value="$(arg hand)"/>
    </include>

    <rosparam ns="effort_sum" subst_value="true">
      dim: 7
      require_heartbeat: false
      heartbeat_max_period: 0.075
    </rosparam>

    <!-- Moveit -->
    <include if="$(arg planning)" file="$(find lcsr_barrett)/launch/wam7_planning.launch">
      <arg name="joint_states_topic" value="barrett_manager/joint_states"/>
      <arg name="ee_empty" value="$(arg empty)"/>
      <arg name="ee_hand" value="$(arg hand)"/>
      <arg name="ee_ball" value="$(arg ball)"/>
    </include>

    <!-- Run singularity rescuer -->
    <include
      if="$(arg rescuer)"
      file="$(find lcsr_barrett)/launch/singularity_rescuer.launch">
      <arg name="ee_empty" value="$(arg empty)"/>
      <arg name="ee_hand" value="$(arg hand)"/>
      <arg name="ee_ball" value="$(arg ball)"/>
    </include>

  </group>

</launch>
